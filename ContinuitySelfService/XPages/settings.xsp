<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core"
	xmlns:xc="http://www.ibm.com/xsp/custom">
	
	<xp:this.data>
		<xp:dominoDocument var="docSettings" formName="fSettings" action="editDocument">
			<xp:this.documentId><![CDATA[#{javascript:var vw = database.getView("vwSettings");
if (vw.getEntryCount()>0) {
	return vw.getFirstDocument().getUniversalID();
}}]]></xp:this.documentId>
		</xp:dominoDocument>
	</xp:this.data>
	
	<xp:this.acl>
		<xp:acl>
			<xp:this.entries>
				<xp:aclEntry type="DEFAULT" right="NOACCESS"></xp:aclEntry>
				<xp:aclEntry right="NOACCESS" type="ANONYMOUS"></xp:aclEntry>
				<xp:aclEntry type="ROLE" right="EDITOR">
					<xp:this.name><![CDATA[[admin]]]></xp:this.name>
					<xp:this.fullName><![CDATA[[admin]]]></xp:this.fullName>
				</xp:aclEntry>
			</xp:this.entries>
		</xp:acl>
	</xp:this.acl>

	<xc:layout>
		<xp:this.facets>

			<xp:div xp:key="facetMiddle">
			
			
			<xp:messages id="messages1"></xp:messages>

			<xp:table>
				<xp:tr>
					<xp:td>
						<xp:label value="Continuity (secondary) directory db path:" id="directoryDbPath_Label1"
							for="directoryDbPath1">
						</xp:label>
					</xp:td>
					<xp:td>
						<xp:inputText value="#{docSettings.directoryDbPath}"
							id="directoryDbPath1" required="true">
							
						<xp:this.validators>
							<xp:validateRequired message="All fields are required"></xp:validateRequired>
						</xp:this.validators>
						</xp:inputText>
					</xp:td>
				</xp:tr>
				<xp:tr>
					<xp:td>
						<xp:label value="Unplugged db path:" id="unpluggedDbPath_Label1"
							for="unpluggedDbPath1">
						</xp:label>
					</xp:td>
					<xp:td>
						<xp:inputText value="#{docSettings.unpluggedDbPath}"
							id="unpluggedDbPath1" required="true">
							
						<xp:this.validators>
							<xp:validateRequired message="All fields are required"></xp:validateRequired>
						</xp:this.validators>
						</xp:inputText>
					</xp:td>
				</xp:tr>
				<xp:tr>
					<xp:td>
						<xp:label value="Host url:" id="hostUrl_Label1" for="hostUrl1"></xp:label>
					</xp:td>
					<xp:td>
						<xp:inputText value="#{docSettings.hostUrl}" id="hostUrl1" required="true">
						
						<xp:this.validators>
							<xp:validateRequired message="All fields are required"></xp:validateRequired>
						</xp:this.validators>
						</xp:inputText>
						
					</xp:td>
				</xp:tr>
				<xp:tr>
					<xp:td>
						<xp:label value="Install base path:" id="installBasePath_Label1"
							for="installBasePath1">
						</xp:label>
					</xp:td>
					<xp:td>
						<xp:inputText value="#{docSettings.installBasePath}"
							id="installBasePath1" required="true">
							
						<xp:this.validators>
							<xp:validateRequired message="All fields are required"></xp:validateRequired>
						</xp:this.validators>
						</xp:inputText>
					</xp:td>
				</xp:tr>
				<xp:tr>
					<xp:td>
						<xp:label value="Continuity db template path:"
							id="continuityDbTemplatePath_Label1" for="continuityDbTemplatePath1">
						</xp:label>
					</xp:td>
					<xp:td>
						<xp:inputText value="#{docSettings.continuityDbTemplatePath}"
							id="continuityDbTemplatePath1" required="true">

						<xp:this.validators>
							<xp:validateRequired message="All fields are required"></xp:validateRequired>
						</xp:this.validators></xp:inputText>
					</xp:td>
				</xp:tr>
				
				<xp:tr>
					<xp:td>
						<xp:label value="adminGroup:"
							id="label1" for="inputText1">
						</xp:label>
					</xp:td>
					<xp:td>
						<xp:inputText value="#{docSettings.adminGroup}"
							id="inputText1" required="true">

						<xp:this.validators>
							<xp:validateRequired message="All fields are required"></xp:validateRequired>
						</xp:this.validators></xp:inputText>
					</xp:td>
				</xp:tr>
				
				<xp:tr>
					<xp:td>
						<xp:label value="Sender name:"
							id="label2" for="inputSenderName">
						</xp:label>
					</xp:td>
					<xp:td>
						<xp:inputText value="#{docSettings.senderName}"
							id="inputSenderName" required="true">

						<xp:this.validators>
							<xp:validateRequired message="All fields are required"></xp:validateRequired>
						</xp:this.validators></xp:inputText>
					</xp:td>
				</xp:tr>
				
				<xp:tr>
					<xp:td>
						<xp:label value="Sender email address:"
							id="label3" for="inputSenderEmail">
						</xp:label>
					</xp:td>
					<xp:td>
						<xp:inputText value="#{docSettings.senderEmail}"
							id="inputSenderEmail" required="true">

						<xp:this.validators>
							<xp:validateRequired message="All fields are required"></xp:validateRequired>
						</xp:this.validators></xp:inputText>
					</xp:td>
				</xp:tr>
				
				
			</xp:table>

			<xp:button value="Save" id="button1">
					<xp:eventHandler event="onclick" submit="true"
						refreshMode="complete">
						<xp:this.action><![CDATA[#{javascript:
						
						try {
							if ( docSettings.save() ) {
							
								//reload config bean
								dBar.info("reload config bean...");
								configBean.reload();
							
							//copy setting to all instances
							var vwInstances = database.getView("Organisations");
							
							dBar.info("copy settings to all instances");
							
							var docOrg = vwInstances.getFirstDocument();
							while(null != docOrg) { 
							
								var path = docOrg.getItemValueString("continuityDbPath");
								var name = docOrg.getItemValueString("name");
							
								dBar.info("copy to " + name + " (at: " + path + ")");
								
								if (path.length>0) {
									
									var dbOrg = session.getDatabase( database.getServer(), path );
									
									if (dbOrg.isOpen()) {
									
										var vwSettings = dbOrg.getView("vwAllByType");
										var docSettingsOrg = vwSettings.getAllDocumentsByKey("fSettings", true).getFirstDocument();
										if (null != docSettingsOrg) {
										
											docSettingsOrg.replaceItemValue("senderEmail", docSettings.getItemValueString("senderEmail") );
											docSettingsOrg.replaceItemValue("senderName", docSettings.getItemValueString("senderName") );
											docSettingsOrg.save();
											docSettingsOrg.recycle();
										
											dBar.debug("- settings updated");
										
										}
										
										vwSettings.recycle();
									
									
									} else {
									
										dBar.error("could not open Continuity database at " + path);
									}
									
									dbOrg.recycle();
								}
							
								
								var docTemp = vwInstances.getNextDocument(docOrg)
								docOrg.recycle();
								docOrg = docTemp;
							}
							
							
		context.redirectToPage("organisations");
	}
	
} catch (e) {
	dBar.error(e);
}}]]></xp:this.action>
					</xp:eventHandler>
				</xp:button>
		</xp:div>
	</xp:this.facets>
	</xc:layout>
	
</xp:view>
